const length = require('./length')

test('km to km', () => { expect(length('1', 'km', 'km')).toBe(1) })
test('km to m', () => { expect(length('1', 'km', 'm')).toBe(1000) })
test('km to cm', () => { expect(length('1', 'km', 'cm')).toBe(100000) })
test('km to mm', () => { expect(length('1', 'km', 'mm')).toBe(1000000) })
test('km to μm', () => { expect(length('1', 'km', 'μm')).toBe(1000000000) })
test('km to nm', () => { expect(length('1', 'km', 'nm')).toBe(1000000000000) })
test('km to mi', () => { expect(length('1', 'km', 'mi')).toBe(0.621371) })
test('km to yd', () => { expect(length('1', 'km', 'yd')).toBe(1093.61) })
test('km to ft', () => { expect(length('1', 'km', 'ft')).toBe(3280.84) })
test('km to in', () => { expect(length('1', 'km', 'in')).toBe(39370.10) })

test('m to km', () => { expect(length('1', 'm', 'km')).toBe(0.001) })
test('m to m', () => { expect(length('1', 'm', 'm')).toBe(1) })
test('m to cm', () => { expect(length('1', 'm', 'cm')).toBe(100) })
test('m to mm', () => { expect(length('1', 'm', 'mm')).toBe(1000) })
test('m to μm', () => { expect(length('1', 'm', 'μm')).toBe(1000000) })
test('m to nm', () => { expect(length('1', 'm', 'nm')).toBe(1000000000) })
test('m to mi', () => { expect(length('1', 'm', 'mi')).toBe(0.000621371) })
test('m to yd', () => { expect(length('1', 'm', 'yd')).toBe(1.09361) })
test('m to ft', () => { expect(length('1', 'm', 'ft')).toBe(3.28084) })
test('m to in', () => { expect(length('1', 'm', 'in')).toBe(39.3701) })
